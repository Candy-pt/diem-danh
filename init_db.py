#!/usr/bin/env python3
"""
Script kh·ªüi t·∫°o c∆° s·ªü d·ªØ li·ªáu v√† d·ªØ li·ªáu m·∫´u cho h·ªá th·ªëng qu·∫£n l√Ω nh√¢n s·ª± tr√™n Railway
"""

from app import app
from models import db, User, Employee, Department, Position, Attendance, Payroll, Payment
from werkzeug.security import generate_password_hash
from datetime import datetime, date, timedelta
import os
import random

def init_database():
    """Kh·ªüi t·∫°o c∆° s·ªü d·ªØ li·ªáu"""
    with app.app_context():
        # Ki·ªÉm tra v√† t·∫°o t·∫•t c·∫£ b·∫£ng
        db.create_all()
        print("‚úì ƒê√£ t·∫°o t·∫•t c·∫£ b·∫£ng trong c∆° s·ªü d·ªØ li·ªáu")

def create_sample_data():
    """T·∫°o d·ªØ li·ªáu m·∫´u"""
    with app.app_context():
        # T·∫°o user admin
        admin_user = User(
            username='admin',
            email='admin@company.com',
            password_hash=generate_password_hash('admin123'),
            role='admin'
        )
        db.session.add(admin_user)
        print("‚úì ƒê√£ t·∫°o t√†i kho·∫£n admin (username: admin, password: admin123)")

        # T·∫°o departments
        departments = [
            Department(name='K·ªπ thu·∫≠t', description='Ph√≤ng k·ªπ thu·∫≠t v√† ph√°t tri·ªÉn'),
            Department(name='Nh√¢n s·ª±', description='Ph√≤ng nh√¢n s·ª± v√† h√†nh ch√≠nh'),
            Department(name='Kinh doanh', description='Ph√≤ng kinh doanh v√† marketing'),
            Department(name='T√†i ch√≠nh', description='Ph√≤ng t√†i ch√≠nh v√† k·∫ø to√°n'),
            Department(name='V·∫≠n h√†nh', description='Ph√≤ng v·∫≠n h√†nh v√† s·∫£n xu·∫•t')
        ]
        
        for dept in departments:
            db.session.add(dept)
        print("‚úì ƒê√£ t·∫°o 5 ph√≤ng ban")

        # T·∫°o positions
        positions = [
            Position(title='Gi√°m ƒë·ªëc', description='Gi√°m ƒë·ªëc ƒëi·ªÅu h√†nh', base_salary=50000000),
            Position(title='Tr∆∞·ªüng ph√≤ng', description='Tr∆∞·ªüng ph√≤ng ban', base_salary=30000000),
            Position(title='Nh√¢n vi√™n cao c·∫•p', description='Nh√¢n vi√™n c√≥ kinh nghi·ªám', base_salary=20000000),
            Position(title='Nh√¢n vi√™n', description='Nh√¢n vi√™n th∆∞·ªùng', base_salary=15000000),
            Position(title='Th·ª±c t·∫≠p sinh', description='Th·ª±c t·∫≠p sinh', base_salary=8000000)
        ]
        
        for pos in positions:
            db.session.add(pos)
        print("‚úì ƒê√£ t·∫°o 5 v·ªã tr√≠ c√¥ng vi·ªác")

        db.session.commit()

        # T·∫°o employees
        employees_data = [
            {
                'employee_id': 'NV001',
                'first_name': 'Nguy·ªÖn',
                'last_name': 'VƒÉn A',
                'email': 'nguyenvana@company.com',
                'phone': '0901234567',
                'address': '123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM',
                'position': 'Gi√°m ƒë·ªëc',
                'department': 'K·ªπ thu·∫≠t',
                'hire_date': date(2020, 1, 15),
                'salary': 50000000,
                'allowance': 5000000
            },
            {
                'employee_id': 'NV002',
                'first_name': 'Tr·∫ßn',
                'last_name': 'Th·ªã B',
                'email': 'tranthib@company.com',
                'phone': '0901234568',
                'address': '456 ƒê∆∞·ªùng XYZ, Qu·∫≠n 2, TP.HCM',
                'position': 'Tr∆∞·ªüng ph√≤ng',
                'department': 'Nh√¢n s·ª±',
                'hire_date': date(2021, 3, 20),
                'salary': 30000000,
                'allowance': 3000000
            },
            {
                'employee_id': 'NV003',
                'first_name': 'L√™',
                'last_name': 'VƒÉn C',
                'email': 'levanc@company.com',
                'phone': '0901234569',
                'address': '789 ƒê∆∞·ªùng DEF, Qu·∫≠n 3, TP.HCM',
                'position': 'Nh√¢n vi√™n cao c·∫•p',
                'department': 'Kinh doanh',
                'hire_date': date(2022, 6, 10),
                'salary': 20000000,
                'allowance': 2000000
            },
            {
                'employee_id': 'NV004',
                'first_name': 'Ph·∫°m',
                'last_name': 'Th·ªã D',
                'email': 'phamthid@company.com',
                'phone': '0901234570',
                'address': '321 ƒê∆∞·ªùng GHI, Qu·∫≠n 4, TP.HCM',
                'position': 'Nh√¢n vi√™n',
                'department': 'T√†i ch√≠nh',
                'hire_date': date(2023, 1, 5),
                'salary': 15000000,
                'allowance': 1500000
            },
            {
                'employee_id': 'NV005',
                'first_name': 'Ho√†ng',
                'last_name': 'VƒÉn E',
                'email': 'hoangvane@company.com',
                'phone': '0901234571',
                'address': '654 ƒê∆∞·ªùng JKL, Qu·∫≠n 5, TP.HCM',
                'position': 'Th·ª±c t·∫≠p sinh',
                'department': 'V·∫≠n h√†nh',
                'hire_date': date(2024, 1, 1),
                'salary': 8000000,
                'allowance': 500000
            }
        ]

        for emp_data in employees_data:
            employee = Employee(**emp_data)
            db.session.add(employee)
        print("‚úì ƒê√£ t·∫°o 5 nh√¢n vi√™n m·∫´u")

        db.session.commit()

        # T·∫°o attendance records cho th√°ng hi·ªán t·∫°i (theo m√∫i gi·ªù +07)
        current_time = datetime.utcnow().replace(tzinfo=None)  # L·∫•y gi·ªù UTC
        vietnam_offset = timedelta(hours=7)  # M√∫i gi·ªù Vi·ªát Nam +07
        vietnam_time = current_time + vietnam_offset
        current_month = vietnam_time.month
        current_year = vietnam_time.year
        
        for employee in Employee.query.all():
            for day in range(1, 21):
                if day <= 20:  # Ch·ªâ t·∫°o cho 20 ng√†y ƒë·∫ßu th√°ng
                    attendance_date = date(current_year, current_month, day)
                    if attendance_date.weekday() < 5:  # Skip weekends
                        check_in_time = datetime.combine(attendance_date, datetime.min.time().replace(hour=8, minute=random.randint(0, 30)))
                        check_out_time = datetime.combine(attendance_date, datetime.min.time().replace(hour=17, minute=random.randint(0, 30)))
                        
                        total_hours = (check_out_time - check_in_time).total_seconds() / 3600
                        overtime_hours = max(0, total_hours - 8)
                        
                        attendance = Attendance(
                            employee_id=employee.id,
                            date=attendance_date,
                            check_in=check_in_time,
                            check_out=check_out_time,
                            total_hours=round(total_hours, 2),
                            overtime_hours=round(overtime_hours, 2),
                            status='present'
                        )
                        db.session.add(attendance)
        
        print("‚úì ƒê√£ t·∫°o d·ªØ li·ªáu ch·∫•m c√¥ng cho th√°ng hi·ªán t·∫°i")

        db.session.commit()
        print("‚úì Ho√†n th√†nh kh·ªüi t·∫°o d·ªØ li·ªáu m·∫´u!")

def main():
    """H√†m ch√≠nh ch·∫°y tr√™n Railway"""
    print("üöÄ B·∫Øt ƒë·∫ßu kh·ªüi t·∫°o h·ªá th·ªëng qu·∫£n l√Ω nh√¢n s·ª± tr√™n Railway...")
    
    try:
        # C·∫•u h√¨nh database URL t·ª´ Railway
        app.config['SQLALCHEMY_DATABASE_URI'] = os.environ.get('DATABASE_URL')
        app.config['SQLALCHEMY_ENGINE_OPTIONS'] = {
            "connect_args": {"ssl": {"fake_flag_to_enable_tls": True}}  # SSL cho Railway
        }
        app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

        init_database()
        create_sample_data()
        print("\nüéâ Kh·ªüi t·∫°o th√†nh c√¥ng!")
        print("\nüìã Th√¥ng tin ƒëƒÉng nh·∫≠p:")
        print("   Username: admin")
        print("   Password: admin123")
        print("\nüîó Truy c·∫≠p ·ª©ng d·ª•ng t·∫°i URL do Railway cung c·∫•p (xem trong tab Domains)")

    except Exception as e:
        print(f"‚ùå L·ªói: {str(e)}")
        with app.app_context():
            db.session.rollback()

if __name__ == '__main__':
    main()